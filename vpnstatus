#!/usr/bin/env python3
# -*- coding: utf-8 -*-

#################################################
# Skript zum Auslesen des VPN-Server-Status     #
# --------------------------------------------- #
# Erstellt von Johannes Paul, 09.04.2014        #
# --------------------------------------------- #
# Syntax: vpnstatus [tel]                       #
# Parameter (VPN-Server):                       #
#    tel - Telnet statt Logdatei                #
#################################################

# Import
import sys
import time
import curses
import subprocess
import telnetlib
import vpnstatus_parser
from curseslib import initialize_colors

def main(screen):
    initialize_colors()
    
    screen.nodelay(1)
    
    if 'tel' in sys.argv:
        tel = True
    else:
        tel = False
    
    while True:
        # Exit with <q>
        c = screen.getch()
        if c == ord('q'):break
        screen.clear()
        screen.move(0,0)
        screen.addstr("Zum Beenden <q> drücken!\n\n", curses.color_pair(1) | curses.A_BOLD)
    
        # Vpnserver active?
        screen.addstr("Serverstatus:\n")
        process = subprocess.Popen('systemctl status openvpn@server.service', shell=True, stdout=subprocess.PIPE, universal_newlines=True)
        sysstatus = process.stdout.read()
        statuslines = sysstatus.split('\n')

        status = 'inaktiv'
        statusline = "Fehler in der Statusüberprüfung!!!\n"
        for line in statuslines:
            if line.find('Active') > -1:
                if line.find('inactive') == -1:
                    status = 'aktiv'
                statusline = line
                break
    
        vpnstatus_parser.curses_status(screen, status, statusline)
        if status == 'aktiv':
            clients = vpnstatus_parser.get_status_info(tel)
            vpnstatus_parser.curses_clients(screen, clients)
    
        screen.refresh()
        # Wait a moment
        time.sleep(1)
    curses.endwin()
    
curses.wrapper(main)
